import{_ as s,c as e,o as i,V as a}from"./chunks/framework.szqEfhRr.js";const E=JSON.parse('{"title":"Trusted request","description":"","frontmatter":{},"headers":[],"relativePath":"security/trusted-request.md","filePath":"security/trusted-request.md","lastUpdated":null}'),t={name:"security/trusted-request.md"},n=a(`<h1 id="trusted-request" tabindex="-1">Trusted request <a class="header-anchor" href="#trusted-request" aria-label="Permalink to &quot;Trusted request&quot;">â€‹</a></h1><p>Getting user information, like a host and IP address will work out of the box in a normal setup where a single webserver is used to serve the website. If your Yii application, however, runs behind a reverse proxy, you need to add configuration to retrieve this information as the direct client is now the proxy, and the user IP address is passed to the Yii application by a header set by the proxy.</p><p>You shouldn&#39;t blindly trust headers provided by proxies unless you explicitly trust the proxy. Yii supports configuring trusted proxies via the <code>Yiisoft\\Yii\\Web\\Middleware\\TrustedHostsNetworkResolver</code>. You should add it to <a href="./../structure/middleware.html">middleware stack</a>.</p><p>The following is a request config for an application that runs behind an array of reverse proxies, which are located in the <code>10.0.2.0/24</code> IP network:</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@var</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\Yiisoft\\Yii\\Web\\Middleware\\TrustedHostsNetworkResolver</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> $trustedHostsNetworkResolver */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$trustedHostsNetworkResolver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $trustedHostsNetworkResolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withAddedTrustedHosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.0.2.0/24&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>The proxy sends the IP in the <code>X-Forwarded-For</code> header by default, and the protocol (<code>http</code> or <code>https</code>) is in <code>X-Forwarded-Proto</code>.</p><p>In case your proxies are using different headers you can use the request configuration to adjust these, e.g.:</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@var</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\Yiisoft\\Yii\\Web\\Middleware\\TrustedHostsNetworkResolver</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> $trustedHostsNetworkResolver */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$trustedHostsNetworkResolver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $trustedHostsNetworkResolver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withAddedTrustedHosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.0.2.0/24&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;X-ProxyUser-Ip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Front-End-Https&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;X-Proxy-User-Ip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>With the above configuration, <code>X-ProxyUser-Ip</code> and <code>Front-End-Https</code> headers are used to get user IP and protocol.</p>`,9),r=[n];function p(l,h,d,o,k,u){return i(),e("div",null,r)}const g=s(t,[["render",p]]);export{E as __pageData,g as default};
