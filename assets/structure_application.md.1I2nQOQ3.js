import{_ as e,c as t,o as a,V as i}from"./chunks/framework.szqEfhRr.js";const m=JSON.parse('{"title":"Application","description":"","frontmatter":{},"headers":[],"relativePath":"structure/application.md","filePath":"structure/application.md","lastUpdated":null}'),n={name:"structure/application.md"},o=i('<h1 id="application" tabindex="-1">Application <a class="header-anchor" href="#application" aria-label="Permalink to &quot;Application&quot;">â€‹</a></h1><p>The primary purpose of the web application and its runner in Yii 3 is to process requests to get responses.</p><p>Typically, the runtime consists of:</p><ol><li>Startup. Get config, create an instance of container and do additional environment initialization such as registering error handler, so it can handle errors occurring. Fire <code>ApplicationStartup</code> event.</li><li>Handle requests by passing request object to middleware dispatcher to execute <a href="./middleware.html">middleware stack</a> and get a response object. In usual PHP applications it&#39;s done once. In <a href="./../tutorial/using-with-event-loop.html">environments such as RoadRunner</a>, it could be done multiple times with the same application instance. Response object is converted into an actual HTTP response by using emitter. Fire <code>AfterEmit</code> event.</li><li>Shutdown. Fire <code>ApplicationShutdown</code> event.</li></ol>',4),r=[o];function s(c,p,l,d,u,h){return a(),t("div",null,r)}const f=e(n,[["render",s]]);export{m as __pageData,f as default};
