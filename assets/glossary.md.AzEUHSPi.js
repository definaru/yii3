import{_ as a,c as e,o as r,V as t}from"./chunks/framework.szqEfhRr.js";const f=JSON.parse('{"title":"Glossary","description":"","frontmatter":{"title":"Glossary"},"headers":[],"relativePath":"glossary.md","filePath":"glossary.md","lastUpdated":null}'),o={name:"glossary.md"},i=t('<h1 id="a" tabindex="-1">A <a class="header-anchor" href="#a" aria-label="Permalink to &quot;A&quot;">​</a></h1><h2 id="alias" tabindex="-1">alias <a class="header-anchor" href="#alias" aria-label="Permalink to &quot;alias&quot;">​</a></h2><p>Alias is a string that&#39;s used by Yii to refer to the class or directory such as <code>@app/vendor</code>. Read more in <a href="./concept/aliases.html">&quot;Aliases&quot;</a>.</p><h2 id="asset" tabindex="-1">asset <a class="header-anchor" href="#asset" aria-label="Permalink to &quot;asset&quot;">​</a></h2><p>Asset refers to a resource file. Typically, it contains JavaScript or CSS code but can be any static content accessed via HTTP.</p><h1 id="c" tabindex="-1">C <a class="header-anchor" href="#c" aria-label="Permalink to &quot;C&quot;">​</a></h1><h2 id="configuration" tabindex="-1">configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;configuration&quot;">​</a></h2><p>The Configuration may refer either to the process of setting properties of an object or to a configuration file that stores settings for an object, or a class of objects. Read more in <a href="./concept/configuration.html">&quot;Configuration&quot;</a>.</p><h1 id="d" tabindex="-1">D <a class="header-anchor" href="#d" aria-label="Permalink to &quot;D&quot;">​</a></h1><h2 id="di" tabindex="-1">DI <a class="header-anchor" href="#di" aria-label="Permalink to &quot;DI&quot;">​</a></h2><p>Dependency Injection is a programming technique where an object injects a dependent object. <a href="./concept/di-container.html">&quot;DI&quot;</a></p><h1 id="i" tabindex="-1">I <a class="header-anchor" href="#i" aria-label="Permalink to &quot;I&quot;">​</a></h1><h2 id="installation" tabindex="-1">installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;installation&quot;">​</a></h2><p>Installation is a process of preparing something to work either by following a readme file or by executing a specially prepared script. In case of Yii, it&#39;s setting permissions and fulfilling software requirements.</p><h1 id="m" tabindex="-1">M <a class="header-anchor" href="#m" aria-label="Permalink to &quot;M&quot;">​</a></h1><h2 id="middleware" tabindex="-1">middleware <a class="header-anchor" href="#middleware" aria-label="Permalink to &quot;middleware&quot;">​</a></h2><p>Middleware is a processor in the request processing stack. Given a request, it may either produce a response or do some action and pass processing to the next middleware. Read more in <a href="./structure/middleware.html">&quot;Middleware&quot;</a>.</p><h2 id="module" tabindex="-1">module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;module&quot;">​</a></h2><p>The module is a sub-application which groups some code based on use-case. It&#39;s typically used within the main application and may contain URL handlers or console commands.</p><h1 id="n" tabindex="-1">N <a class="header-anchor" href="#n" aria-label="Permalink to &quot;N&quot;">​</a></h1><h2 id="namespace" tabindex="-1">namespace <a class="header-anchor" href="#namespace" aria-label="Permalink to &quot;namespace&quot;">​</a></h2><p>Namespace refers to a <a href="https://www.php.net/manual/en/language.namespaces.php" target="_blank" rel="noreferrer">PHP language feature</a>.</p><h1 id="p" tabindex="-1">P <a class="header-anchor" href="#p" aria-label="Permalink to &quot;P&quot;">​</a></h1><h2 id="package" tabindex="-1">package <a class="header-anchor" href="#package" aria-label="Permalink to &quot;package&quot;">​</a></h2><p>A package usually refers to <a href="https://getcomposer.org/doc/" target="_blank" rel="noreferrer">Composer package</a>. It&#39;s code ready for reuse and redistribution installable automatically via package manager.</p><h1 id="r" tabindex="-1">R <a class="header-anchor" href="#r" aria-label="Permalink to &quot;R&quot;">​</a></h1><h2 id="rule" tabindex="-1">rule <a class="header-anchor" href="#rule" aria-label="Permalink to &quot;rule&quot;">​</a></h2><p>The rule usually refers to a validation rule of the <a href="https://github.com/yiisoft/validator" target="_blank" rel="noreferrer">yiisoft/validator</a> package. It holds a set of parameters for checking if a data set is valid. &quot;Rule handler&quot; does the actual processing.</p><h1 id="q" tabindex="-1">Q <a class="header-anchor" href="#q" aria-label="Permalink to &quot;Q&quot;">​</a></h1><h2 id="queue" tabindex="-1">queue <a class="header-anchor" href="#queue" aria-label="Permalink to &quot;queue&quot;">​</a></h2><p>A queue is similar to a stack. Queue follows First-In-First-Out methodology.</p><h1 id="v" tabindex="-1">V <a class="header-anchor" href="#v" aria-label="Permalink to &quot;V&quot;">​</a></h1><h2 id="vendor" tabindex="-1">vendor <a class="header-anchor" href="#vendor" aria-label="Permalink to &quot;vendor&quot;">​</a></h2><p>A Vendor is an organization or individual developer providing code in the form of packages. It also may refer to <a href="https://getcomposer.org/doc/" target="_blank" rel="noreferrer">Composer&#39;s <code>vendor</code> directory</a>.</p>',34),s=[i];function n(l,h,d,c,u,p){return r(),e("div",null,s)}const q=a(o,[["render",n]]);export{f as __pageData,q as default};
